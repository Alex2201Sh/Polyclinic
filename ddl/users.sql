create table if not exists passports
(
    id                    bigint generated by default as identity
        constraint passports_pkey
            primary key,
    first_name            varchar(255),
    surname               varchar(255),
    address               varchar(255),
    birth_date            date,
    birth_place           varchar(255),
    date_of_issue         date,
    date_of_expiry        date,
    code_of_issuing_state varchar(255),
    nationality           varchar(255),
    passport_number       varchar(255),
    personal_no           varchar(255)
        constraint uk_qxig4rcgcpvvrgjv1ro6ry19p
            unique,
    sex                   varchar(255)
);

alter table passports
    owner to postgres;

create table if not exists diseases
(
    id          bigint generated by default as identity
        constraint diseases_pkey
            primary key,
    name        varchar(255),
    description varchar(999)

);

alter table diseases
    owner to postgres;



create table if not exists medical_cards
(
    id            bigint generated by default as identity
        constraint medical_cards_pkey
            primary key,
    health_status integer
);

alter table medical_cards
    owner to postgres;

create table if not exists doctor
(
    id         bigint generated by default as identity
        constraint doctor_pkey
            primary key,
    department varchar(255) not null,
    position   varchar(255)
);

alter table doctor
    owner to postgres;


create table if not exists users
(
    id              bigint generated by default as identity
        constraint users_pkey
            primary key,
    username        varchar(255) not null
        constraint uk_r43af9ap4edm43mmtq01oddj6
            unique,
    password        varchar(255) not null,
    email           varchar(255)
        constraint uk_6dotkott2kjsp8vw4d0m25fb7
            unique,
    phone_no        varchar(255)
        constraint uk_sixq0fu6tsxv2xt6l8nivm4wm
            unique,
    user_role       varchar(255) not null,
    passport_id     bigint
        constraint fk_user_passport_id
            references passports,
    medical_card_id bigint
        constraint fk_user_medical_card_id
            references medical_cards,
    doctor_id       bigint
        constraint fk_user_doctor_id
            references doctor
);

alter table users
    owner to postgres;

INSERT INTO medical_cards (health_status)
values (100),
       (90),
       (80),
       (80),
       (80),
       (80),
       (80),
       (80),
       (85);

INSERT INTO diseases (name, description)
VALUES ('Грипп', 'Обычный грипп'),
       ('Ковид2019', 'Страшный ковид');

INSERT INTO doctor (id, department, position)
values (100, 'ХИРУРГИЯ', 'Хирург'),
       (101, 'ПЕДИАТРИЯ', 'Педиатр'),
       (102, 'ЛАБОРАТОРИЯ', 'Лаборант'),
       (103, 'СТОМАТОЛОГИЯ', 'Стоматолог'),
       (104, 'ТЕРАПИЯ', 'Терапевт'),
       (106, 'РЕНТГЕНОЛОГИЯ', 'Рентгенолог')
;

INSERT INTO public.passports (address, birth_date, birth_place, code_of_issuing_state, date_of_expiry, date_of_issue,
                              first_name, nationality, passport_number, personal_no, sex, surname)
VALUES ('', '2000-01-01', '', '07', '2022-01-01', '2019-01-01', 'Admin', 'Belarus', 'KH45a6789', '12343567', 'MALE',
        'Adminov'),
       ('', '2000-01-01', '', '07', '2022-01-01', '2019-01-01', 'Maria', 'Russia', 'KH4d56189', '1234156', 'FEMALE',
        'Ivanova'),
       ('', '2000-01-01', '', '07', '2022-01-01', '2019-01-01', 'Doc', 'Russia', 'KH45f6189', '1523156', 'FEMALE',
        'Doctorov'),
       ('', '2000-01-01', '', '07', '2022-01-01', '2019-01-01', 'Petr', 'Russia', 'KH45g6189', '1236156', 'FEMALE',
        'Petrov'),
       ('', '2000-01-01', '', '07', '2022-01-01', '2019-01-01', 'Doc2', 'Russia', 'KH456в189', '12в37156', 'FEMALE',
        'Doctorov2');


insert into users (username, password, email, phone_no, user_role, passport_id, medical_card_id)
values ('admin', '1', 'a@a', '123', 'ADMIN', 1, 1),
       ('maria', '1', 'm@m', '56', 'GUEST', 2, 2),
       ('petr', '1', 'p@p', '789456', 'PATIENT', 4, 4)
;
INSERT INTO users (username, password, email, phone_no, user_role, passport_id, medical_card_id, doctor_id)
values ('doc', '1', 'd@d', '7654', 'DOCTOR', 3, 3,101),
       ('doc2', '1', 'd@dd', '345654', 'DOCTOR', 5, 5,103);

--Кодируем сохранённые пароли. Новые пользователи будут поступать в базу уже закодированные
create extension if not exists pgcrypto;
update users set password = crypt(password, gen_salt('bf', 8));

--INFORMATION
create table information
(
    id       bigint generated by default as identity
        constraint information_pkey
            primary key,
    filename varchar(255),
    type     varchar(255) not null,
    tag      varchar(255),
    text     varchar(999)
);

alter table information
    owner to postgres;



create table treatments
(
    id               bigint generated by default as identity
        constraint treatments_pkey
            primary key,
    sick_date        date,
    recover_date     date,
    disease_id       bigint
        constraint fk_treatment_disease_id
            references diseases,
    doctor_id        bigint
        constraint fks9o3g99apb0c9ho9ce02vx9hv
            references doctor,
    medical_cards_id bigint
        constraint fk9qo5n62p7sr0ivfckwsc35r21
            references medical_cards
);

alter table treatments
    owner to postgres;

insert into treatments (sick_date, recover_date, disease_id, doctor_id, medical_cards_id)
VALUES ('2022-01-01', '2022-01-03', 1, 101, 4);
